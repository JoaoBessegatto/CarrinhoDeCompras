<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KPg/A8h4BcnDmWgAAAAASUVORK5CYII=
</value>
  </data>
</root>